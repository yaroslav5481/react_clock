{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerIdEverySec","this","setState","window","setInterval","console","info","toUTCString","slice","prevProps","props","name","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,gBAAkB,EALpB,uDAOE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAE3BE,KAAKD,gBAAkBG,OAAOC,aAAY,WACxC,EAAKF,SAAS,CAAEJ,MAAO,IAAIC,OAE3BM,QAAQC,MAAK,IAAIP,MAAOQ,cAAcC,OAAO,IAAK,MACjD,OAdP,gCAiBE,SAAmBC,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAEhCN,QAAQO,MAAR,eAAsBX,KAAKS,MAAMC,KAAjC,mBAAgDF,EAAUE,SApBhE,kCAwBE,WACER,OAAOU,cAAcZ,KAAKD,mBAzB9B,oBA4BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKS,MAAMC,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAxC3C,GAA2BO,a,MCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKzB,SAAS,CAAEmB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEmB,UAAU,OAG5BpB,KAAKsB,QAAUpB,OAAOC,aAAY,WAChC,EAAKF,SAAS,CAAEoB,UAAWN,QAC1B,QApBP,oBAuBE,WACE,MAAgCf,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOV,KAAMW,WA7BlC,GAAyBP,aCPzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.97f573c4.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerIdEverySec = 0;\n\n  componentDidMount() {\n    this.setState({ today: new Date() });\n\n    this.timerIdEverySec = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`now: ${this.props.name}, prev: ${prevProps.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdEverySec);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}